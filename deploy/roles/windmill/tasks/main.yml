---
- name: Install EPEL repository (epel-release)
  yum: name=epel-release state=present enablerepo=extras
  when: ansible_distribution == "CentOS" and (ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7")
  tags:
      - windmill

- name: Install required packages
  yum: enablerepo=epel name="{{item}}" state=present
  with_items:
      - nc
      - openvpn
      - wget
      - easy-rsa
      - mariadb-server
      - MySQL-python
      - policycoreutils-python
      - caddy
      - python34
      - python34-yaml
      - https://github.com/nethesis/keyholder/releases/download/1.0.1-2/keyholder-1.0.1-2.x86_64.rpm
  tags:
      - windmill

- name: Set machine hostname
  hostname:
    name: "{{ machine_hostname }}"

- name: Create windmill directory
  file: state=directory path=/opt/windmill mode=0755
  tags:
      - windmill

- name: Copy windmill files in it
  copy: src=opt/windmill dest=/opt mode=0755 mode=preserve
  tags:
      - windmill

- name: Copy vars for easy-rsa
  template: src=easy-rsa-vars.j2 dest=/opt/windmill/easy-rsa/vars
  tags:
      - windmill

- name: Include certificate vars, initialize certificate and generate pem (could be long...)
  shell: "source /opt/windmill/easy-rsa/vars && /opt/windmill/easy-rsa/pkitool --initca && /opt/windmill/easy-rsa/build-dh"
  tags:
      - windmill

- name: Enable and start mariadb server
  service: name=mariadb state=started enabled=yes
  tags:
      - windmill

- name: Create a new database with name 'windmill'
  mysql_db:
    name: windmill
    state: present
  tags:
      - windmill

- name: Copy sessions.sql db to host
  copy: src=sessions.sql dest=/tmp/sessions.sql
  tags:
      - windmill

- name: Create sessions table
  mysql_db:
    state: import
    name: windmill
    target: /tmp/sessions.sql
  tags:
      - windmill

- name: Copy histories.sql db to host
  copy: src=histories.sql dest=/tmp/histories.sql
  tags:
      - windmill

- name: Create histories table
  mysql_db:
    state: import
    name: windmill
    target: /tmp/histories.sql
  tags:
      - windmill

- name: Copy logs.sql db to host
  copy: src=logs.sql dest=/tmp/logs.sql
  tags:
      - windmill

- name: Create logs table
  mysql_db:
    state: import
    name: windmill
    target: /tmp/logs.sql
  tags:
      - windmill

- stat: path=/root/.my.cnf
  register: mariadb_pass

- name: Hardening mariadb installation
  shell: |
    mysql_secure_installation <<EOF

    y
    {{ mariadb_root_password }}
    {{ mariadb_root_password }}
    y
    y
    y
    y
    EOF
  when: mariadb_pass.stat.exists == False
  tags:
      - windmill


- name: Copy mysql conf file
  template: src=my.cnf.j2 dest=/root/.my.cnf
  tags:
      - windmill

- name: Create directory for caddy
  shell: "mkdir -p /opt/windmill/caddy"
  tags:
      - windmill

- name: Copy Caddyfile
  template: src=caddyfile.j2 dest=/opt/windmill/caddy/Caddyfile
  tags:
      - windmill

- name: Enable ssl directory for caddy
  shell: "mkdir -p /opt/windmill/caddy/ssl && chown -R caddy:root /opt/windmill/caddy/ssl && chmod 0770 /opt/windmill/caddy/ssl"
  tags:
      - windmill

- name: Copy systemd unit for caddy
  copy: src=usr/lib/systemd/system/caddy-windmill.service dest=/usr/lib/systemd/system/caddy-windmill.service
  tags:
      - windmill

- name: Grant caddy to bind on low ports
  command: setcap cap_net_bind_service=+ep /usr/bin/caddy
  tags:
      - windmill

- name: Enable and start caddy server
  service: name=caddy-windmill state=started enabled=yes
  tags:
      - windmill

- name: Create openvpn directory
  shell: "mkdir -p /opt/windmill/openvpn/spool"
  tags:
      - windmill

- name: Grant access to SE Linux policy
  shell: "semodule -i /opt/windmill/openvpn/windmill.pp"

- name: Copy systemd unit for openvpn windmill
  copy: src=usr/lib/systemd/system/windmill@.service dest=/usr/lib/systemd/system/windmill@.service
  tags:
      - windmill

- name: Enable and start openvpn server aka windmill with deafult conf
  service: name=windmill@windmill state=started enabled=yes
  tags:
      - windmill

- name: Enable and start openvpn server aka windmill with https conf
  service: name=windmill@windmill-https state=started enabled=yes
  tags:
      - windmill

- name: Create ronzinante directory
  shell: "mkdir -p /opt/windmill/ronzinante"
  tags:
      - windmill

- name: Download ronzinante binary
  get_url:
    url: https://github.com/nethesis/windmill/releases/download/0.0.1/ronzinante
    dest: /opt/windmill/ronzinante/ronzinante
    mode: 0755
  tags:
      - windmill

- name: Copy ronzinante conf file
  template: src=ronzinante.j2 dest=/opt/windmill/ronzinante/conf.json
  tags:
      - windmill

- name: Copy systemd unit for ronzinante
  copy: src=usr/lib/systemd/system/ronzinante.service dest=/usr/lib/systemd/system/ronzinante.service
  tags:
      - windmill

- name: Enable and start ronzinante server
  service: name=ronzinante state=started enabled=yes
  tags:
      - windmill

- name: Create support group
  group:
    name: ronzinante
    state: present
  tags:
      - windmill

- stat: path=/etc/keyholder.d/support.pub
  register: key_support

- name: Generate key for support operators
  shell: |
    sudo -u keyholder ssh-keygen -f /etc/keyholder.d/support <<EOF
    {{ keyholder_passphrase }}
    {{ keyholder_passphrase }}
    EOF
  when: key_support.stat.exists == False
  tags:
      - windmill

- name: Set permissions to keyholder keys
  shell: "chown keyholder:keyholder /etc/keyholder.d/support*"
  tags:
      - windmill

- name: Allow support members to use keyholder
  shell: echo -e "---\nronzinante:\n - support" > /etc/keyholder-auth.d/support.yaml
  tags:
      - windmill

- name: Use keyholder sock by default
  shell: echo -e "#\n# man keyholder\n#\nexport SSH_AUTH_SOCK=/run/keyholder/proxy.sock" > /etc/profile.d/keyholder.sh
  tags:
      - windmill

- name: Enable and start keyholder-agent
  service: name=keyholder-agent state=started enabled=yes
  tags:
      - windmill

- name: Enable and start keyholder-proxy
  service: name=keyholder-proxy state=started enabled=yes
  tags:
      - windmill

- name: Arm keyholder key
  shell: |
    keyholder arm <<EOF
    {{ keyholder_passphrase }}
    EOF
  tags:
      - windmill

- name: Download sancho CLI binary
  get_url:
    url: https://github.com/nethesis/windmill/releases/download/0.0.1/sancho
    dest: /usr/local/bin/sancho
    mode: 0755
  tags:
      - windmill

- name: Copy windmill-add-operator helper
  copy: src=usr/local/sbin/windmill-add-operator dest=/usr/local/sbin/windmill-add-operator mode=0755
  tags:
      - windmill
