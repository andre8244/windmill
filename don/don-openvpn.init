#!/bin/bash
#
#       WindMill Remote VPN support daemon
#
# description: WindMill remote SSH support daemon
# processname: don-openvpn

### BEGIN INIT INFO
# Provides: don-openvpn
# Required-Start: $local_fs $don-sshd
# Required-Stop: $local_fs $don-sshd
# Should-Start:
# Default-Start: 
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: WindMill Remote VPN support daemon
### END INIT INFO

# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any later
# version. 
# You should have received a copy of the GNU General Public License (for
# example COPYING); if not, write to the Free Software Foundation, Inc., 675
# Mass Ave, Cambridge, MA 02139, USA.
# This code was originally developed as a Senior Thesis by Michael Cornwell
# at the Concurrent Systems Laboratory (now part of the Storage Systems
# Research Center), Jack Baskin School of Engineering, University of
# California, Santa Cruz. http://ssrc.soe.ucsc.edu/.

PROG_BIN=/usr/sbin/don-openvpn
PID_FILE=/var/run/don/don-openvpn.pid
PROG_OPTS="--cd /usr/share/don/ --config don.ovpn --daemon don-openvpn --writepid $PID_FILE"

# Source function library
. /etc/rc.d/init.d/functions

RETVAL=0
prog=don-openvpn
lockfile=/var/lock/subsys/$prog

start()
{
        [ $UID -eq 0 ] || exit 4
        [ -x $PROG_BIN ] || exit 5
        [ ! -d /var/run/don ] || mkdir -p /var/run/don
	echo -n $"Starting $prog: "
        
        # Execute pre-start hook, it doesn't matter if it fails
        /usr/share/don/hook pre-start
	
        $PROG_BIN $PROG_OPTS
	RETVAL=$?

        if [ $RETVAL -gt 0 ]; then
	    failure; echo
	else
	    success; echo
	fi

	[ $RETVAL = 0 ] && touch $lockfile


	return $RETVAL
}

stop()
{
        [ $UID -eq 0 ] || exit 4
	echo -n $"Shutting down $prog: "
	killproc -p $PID_FILE $PROG_BIN
	RETVAL=$?
	echo
	rm -f $lockfile

	return $RETVAL
}


case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	condrestart)
		if [ -f $PIDFILE ]; then
			stop
			start
		fi
		;;
	status)
		status -p $PID_FILE $PROG_BIN
		RETVAL=$?
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status|condrestart}"
		RETVAL=2
		[ "$1" = 'usage' ] && RETVAL=0
esac

exit $RETVAL

